{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thari/Desktop/face-recognition-project/face-recognition-app/node_modules/sucrase/dist/esm/parser/util/charcodes.js"],"sourcesContent":["export var charCodes; (function (charCodes) {\n  const backSpace = 8; charCodes[charCodes[\"backSpace\"] = backSpace] = \"backSpace\";\n  const lineFeed = 10; charCodes[charCodes[\"lineFeed\"] = lineFeed] = \"lineFeed\"; //  '\\n'\n  const tab = 9; charCodes[charCodes[\"tab\"] = tab] = \"tab\"; //  '\\t'\n  const carriageReturn = 13; charCodes[charCodes[\"carriageReturn\"] = carriageReturn] = \"carriageReturn\"; //  '\\r'\n  const shiftOut = 14; charCodes[charCodes[\"shiftOut\"] = shiftOut] = \"shiftOut\";\n  const space = 32; charCodes[charCodes[\"space\"] = space] = \"space\";\n  const exclamationMark = 33; charCodes[charCodes[\"exclamationMark\"] = exclamationMark] = \"exclamationMark\"; //  '!'\n  const quotationMark = 34; charCodes[charCodes[\"quotationMark\"] = quotationMark] = \"quotationMark\"; //  '\"'\n  const numberSign = 35; charCodes[charCodes[\"numberSign\"] = numberSign] = \"numberSign\"; //  '#'\n  const dollarSign = 36; charCodes[charCodes[\"dollarSign\"] = dollarSign] = \"dollarSign\"; //  '$'\n  const percentSign = 37; charCodes[charCodes[\"percentSign\"] = percentSign] = \"percentSign\"; //  '%'\n  const ampersand = 38; charCodes[charCodes[\"ampersand\"] = ampersand] = \"ampersand\"; //  '&'\n  const apostrophe = 39; charCodes[charCodes[\"apostrophe\"] = apostrophe] = \"apostrophe\"; //  '''\n  const leftParenthesis = 40; charCodes[charCodes[\"leftParenthesis\"] = leftParenthesis] = \"leftParenthesis\"; //  '('\n  const rightParenthesis = 41; charCodes[charCodes[\"rightParenthesis\"] = rightParenthesis] = \"rightParenthesis\"; //  ')'\n  const asterisk = 42; charCodes[charCodes[\"asterisk\"] = asterisk] = \"asterisk\"; //  '*'\n  const plusSign = 43; charCodes[charCodes[\"plusSign\"] = plusSign] = \"plusSign\"; //  '+'\n  const comma = 44; charCodes[charCodes[\"comma\"] = comma] = \"comma\"; //  ','\n  const dash = 45; charCodes[charCodes[\"dash\"] = dash] = \"dash\"; //  '-'\n  const dot = 46; charCodes[charCodes[\"dot\"] = dot] = \"dot\"; //  '.'\n  const slash = 47; charCodes[charCodes[\"slash\"] = slash] = \"slash\"; //  '/'\n  const digit0 = 48; charCodes[charCodes[\"digit0\"] = digit0] = \"digit0\"; //  '0'\n  const digit1 = 49; charCodes[charCodes[\"digit1\"] = digit1] = \"digit1\"; //  '1'\n  const digit2 = 50; charCodes[charCodes[\"digit2\"] = digit2] = \"digit2\"; //  '2'\n  const digit3 = 51; charCodes[charCodes[\"digit3\"] = digit3] = \"digit3\"; //  '3'\n  const digit4 = 52; charCodes[charCodes[\"digit4\"] = digit4] = \"digit4\"; //  '4'\n  const digit5 = 53; charCodes[charCodes[\"digit5\"] = digit5] = \"digit5\"; //  '5'\n  const digit6 = 54; charCodes[charCodes[\"digit6\"] = digit6] = \"digit6\"; //  '6'\n  const digit7 = 55; charCodes[charCodes[\"digit7\"] = digit7] = \"digit7\"; //  '7'\n  const digit8 = 56; charCodes[charCodes[\"digit8\"] = digit8] = \"digit8\"; //  '8'\n  const digit9 = 57; charCodes[charCodes[\"digit9\"] = digit9] = \"digit9\"; //  '9'\n  const colon = 58; charCodes[charCodes[\"colon\"] = colon] = \"colon\"; //  ':'\n  const semicolon = 59; charCodes[charCodes[\"semicolon\"] = semicolon] = \"semicolon\"; //  ';'\n  const lessThan = 60; charCodes[charCodes[\"lessThan\"] = lessThan] = \"lessThan\"; //  '<'\n  const equalsTo = 61; charCodes[charCodes[\"equalsTo\"] = equalsTo] = \"equalsTo\"; //  '='\n  const greaterThan = 62; charCodes[charCodes[\"greaterThan\"] = greaterThan] = \"greaterThan\"; //  '>'\n  const questionMark = 63; charCodes[charCodes[\"questionMark\"] = questionMark] = \"questionMark\"; //  '?'\n  const atSign = 64; charCodes[charCodes[\"atSign\"] = atSign] = \"atSign\"; //  '@'\n  const uppercaseA = 65; charCodes[charCodes[\"uppercaseA\"] = uppercaseA] = \"uppercaseA\"; //  'A'\n  const uppercaseB = 66; charCodes[charCodes[\"uppercaseB\"] = uppercaseB] = \"uppercaseB\"; //  'B'\n  const uppercaseC = 67; charCodes[charCodes[\"uppercaseC\"] = uppercaseC] = \"uppercaseC\"; //  'C'\n  const uppercaseD = 68; charCodes[charCodes[\"uppercaseD\"] = uppercaseD] = \"uppercaseD\"; //  'D'\n  const uppercaseE = 69; charCodes[charCodes[\"uppercaseE\"] = uppercaseE] = \"uppercaseE\"; //  'E'\n  const uppercaseF = 70; charCodes[charCodes[\"uppercaseF\"] = uppercaseF] = \"uppercaseF\"; //  'F'\n  const uppercaseG = 71; charCodes[charCodes[\"uppercaseG\"] = uppercaseG] = \"uppercaseG\"; //  'G'\n  const uppercaseH = 72; charCodes[charCodes[\"uppercaseH\"] = uppercaseH] = \"uppercaseH\"; //  'H'\n  const uppercaseI = 73; charCodes[charCodes[\"uppercaseI\"] = uppercaseI] = \"uppercaseI\"; //  'I'\n  const uppercaseJ = 74; charCodes[charCodes[\"uppercaseJ\"] = uppercaseJ] = \"uppercaseJ\"; //  'J'\n  const uppercaseK = 75; charCodes[charCodes[\"uppercaseK\"] = uppercaseK] = \"uppercaseK\"; //  'K'\n  const uppercaseL = 76; charCodes[charCodes[\"uppercaseL\"] = uppercaseL] = \"uppercaseL\"; //  'L'\n  const uppercaseM = 77; charCodes[charCodes[\"uppercaseM\"] = uppercaseM] = \"uppercaseM\"; //  'M'\n  const uppercaseN = 78; charCodes[charCodes[\"uppercaseN\"] = uppercaseN] = \"uppercaseN\"; //  'N'\n  const uppercaseO = 79; charCodes[charCodes[\"uppercaseO\"] = uppercaseO] = \"uppercaseO\"; //  'O'\n  const uppercaseP = 80; charCodes[charCodes[\"uppercaseP\"] = uppercaseP] = \"uppercaseP\"; //  'P'\n  const uppercaseQ = 81; charCodes[charCodes[\"uppercaseQ\"] = uppercaseQ] = \"uppercaseQ\"; //  'Q'\n  const uppercaseR = 82; charCodes[charCodes[\"uppercaseR\"] = uppercaseR] = \"uppercaseR\"; //  'R'\n  const uppercaseS = 83; charCodes[charCodes[\"uppercaseS\"] = uppercaseS] = \"uppercaseS\"; //  'S'\n  const uppercaseT = 84; charCodes[charCodes[\"uppercaseT\"] = uppercaseT] = \"uppercaseT\"; //  'T'\n  const uppercaseU = 85; charCodes[charCodes[\"uppercaseU\"] = uppercaseU] = \"uppercaseU\"; //  'U'\n  const uppercaseV = 86; charCodes[charCodes[\"uppercaseV\"] = uppercaseV] = \"uppercaseV\"; //  'V'\n  const uppercaseW = 87; charCodes[charCodes[\"uppercaseW\"] = uppercaseW] = \"uppercaseW\"; //  'W'\n  const uppercaseX = 88; charCodes[charCodes[\"uppercaseX\"] = uppercaseX] = \"uppercaseX\"; //  'X'\n  const uppercaseY = 89; charCodes[charCodes[\"uppercaseY\"] = uppercaseY] = \"uppercaseY\"; //  'Y'\n  const uppercaseZ = 90; charCodes[charCodes[\"uppercaseZ\"] = uppercaseZ] = \"uppercaseZ\"; //  'Z'\n  const leftSquareBracket = 91; charCodes[charCodes[\"leftSquareBracket\"] = leftSquareBracket] = \"leftSquareBracket\"; //  '['\n  const backslash = 92; charCodes[charCodes[\"backslash\"] = backslash] = \"backslash\"; //  '\\    '\n  const rightSquareBracket = 93; charCodes[charCodes[\"rightSquareBracket\"] = rightSquareBracket] = \"rightSquareBracket\"; //  ']'\n  const caret = 94; charCodes[charCodes[\"caret\"] = caret] = \"caret\"; //  '^'\n  const underscore = 95; charCodes[charCodes[\"underscore\"] = underscore] = \"underscore\"; //  '_'\n  const graveAccent = 96; charCodes[charCodes[\"graveAccent\"] = graveAccent] = \"graveAccent\"; //  '`'\n  const lowercaseA = 97; charCodes[charCodes[\"lowercaseA\"] = lowercaseA] = \"lowercaseA\"; //  'a'\n  const lowercaseB = 98; charCodes[charCodes[\"lowercaseB\"] = lowercaseB] = \"lowercaseB\"; //  'b'\n  const lowercaseC = 99; charCodes[charCodes[\"lowercaseC\"] = lowercaseC] = \"lowercaseC\"; //  'c'\n  const lowercaseD = 100; charCodes[charCodes[\"lowercaseD\"] = lowercaseD] = \"lowercaseD\"; //  'd'\n  const lowercaseE = 101; charCodes[charCodes[\"lowercaseE\"] = lowercaseE] = \"lowercaseE\"; //  'e'\n  const lowercaseF = 102; charCodes[charCodes[\"lowercaseF\"] = lowercaseF] = \"lowercaseF\"; //  'f'\n  const lowercaseG = 103; charCodes[charCodes[\"lowercaseG\"] = lowercaseG] = \"lowercaseG\"; //  'g'\n  const lowercaseH = 104; charCodes[charCodes[\"lowercaseH\"] = lowercaseH] = \"lowercaseH\"; //  'h'\n  const lowercaseI = 105; charCodes[charCodes[\"lowercaseI\"] = lowercaseI] = \"lowercaseI\"; //  'i'\n  const lowercaseJ = 106; charCodes[charCodes[\"lowercaseJ\"] = lowercaseJ] = \"lowercaseJ\"; //  'j'\n  const lowercaseK = 107; charCodes[charCodes[\"lowercaseK\"] = lowercaseK] = \"lowercaseK\"; //  'k'\n  const lowercaseL = 108; charCodes[charCodes[\"lowercaseL\"] = lowercaseL] = \"lowercaseL\"; //  'l'\n  const lowercaseM = 109; charCodes[charCodes[\"lowercaseM\"] = lowercaseM] = \"lowercaseM\"; //  'm'\n  const lowercaseN = 110; charCodes[charCodes[\"lowercaseN\"] = lowercaseN] = \"lowercaseN\"; //  'n'\n  const lowercaseO = 111; charCodes[charCodes[\"lowercaseO\"] = lowercaseO] = \"lowercaseO\"; //  'o'\n  const lowercaseP = 112; charCodes[charCodes[\"lowercaseP\"] = lowercaseP] = \"lowercaseP\"; //  'p'\n  const lowercaseQ = 113; charCodes[charCodes[\"lowercaseQ\"] = lowercaseQ] = \"lowercaseQ\"; //  'q'\n  const lowercaseR = 114; charCodes[charCodes[\"lowercaseR\"] = lowercaseR] = \"lowercaseR\"; //  'r'\n  const lowercaseS = 115; charCodes[charCodes[\"lowercaseS\"] = lowercaseS] = \"lowercaseS\"; //  's'\n  const lowercaseT = 116; charCodes[charCodes[\"lowercaseT\"] = lowercaseT] = \"lowercaseT\"; //  't'\n  const lowercaseU = 117; charCodes[charCodes[\"lowercaseU\"] = lowercaseU] = \"lowercaseU\"; //  'u'\n  const lowercaseV = 118; charCodes[charCodes[\"lowercaseV\"] = lowercaseV] = \"lowercaseV\"; //  'v'\n  const lowercaseW = 119; charCodes[charCodes[\"lowercaseW\"] = lowercaseW] = \"lowercaseW\"; //  'w'\n  const lowercaseX = 120; charCodes[charCodes[\"lowercaseX\"] = lowercaseX] = \"lowercaseX\"; //  'x'\n  const lowercaseY = 121; charCodes[charCodes[\"lowercaseY\"] = lowercaseY] = \"lowercaseY\"; //  'y'\n  const lowercaseZ = 122; charCodes[charCodes[\"lowercaseZ\"] = lowercaseZ] = \"lowercaseZ\"; //  'z'\n  const leftCurlyBrace = 123; charCodes[charCodes[\"leftCurlyBrace\"] = leftCurlyBrace] = \"leftCurlyBrace\"; //  '{'\n  const verticalBar = 124; charCodes[charCodes[\"verticalBar\"] = verticalBar] = \"verticalBar\"; //  '|'\n  const rightCurlyBrace = 125; charCodes[charCodes[\"rightCurlyBrace\"] = rightCurlyBrace] = \"rightCurlyBrace\"; //  '}'\n  const tilde = 126; charCodes[charCodes[\"tilde\"] = tilde] = \"tilde\"; //  '~'\n  const nonBreakingSpace = 160; charCodes[charCodes[\"nonBreakingSpace\"] = nonBreakingSpace] = \"nonBreakingSpace\";\n  // eslint-disable-next-line no-irregular-whitespace\n  const oghamSpaceMark = 5760; charCodes[charCodes[\"oghamSpaceMark\"] = oghamSpaceMark] = \"oghamSpaceMark\"; // ' '\n  const lineSeparator = 8232; charCodes[charCodes[\"lineSeparator\"] = lineSeparator] = \"lineSeparator\";\n  const paragraphSeparator = 8233; charCodes[charCodes[\"paragraphSeparator\"] = paragraphSeparator] = \"paragraphSeparator\";\n})(charCodes || (charCodes = {}));\n\nexport function isDigit(code) {\n  return (\n    (code >= charCodes.digit0 && code <= charCodes.digit9) ||\n    (code >= charCodes.lowercaseA && code <= charCodes.lowercaseF) ||\n    (code >= charCodes.uppercaseA && code <= charCodes.uppercaseF)\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thari/Desktop/face-recognition-project/face-recognition-app/node_modules/sucrase/dist/esm/parser/util/whitespace.js"],"sourcesContent":["import {charCodes} from \"./charcodes\";\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport const WHITESPACE_CHARS = [\n  0x0009,\n  0x000b,\n  0x000c,\n  charCodes.space,\n  charCodes.nonBreakingSpace,\n  charCodes.oghamSpaceMark,\n  0x2000, // EN QUAD\n  0x2001, // EM QUAD\n  0x2002, // EN SPACE\n  0x2003, // EM SPACE\n  0x2004, // THREE-PER-EM SPACE\n  0x2005, // FOUR-PER-EM SPACE\n  0x2006, // SIX-PER-EM SPACE\n  0x2007, // FIGURE SPACE\n  0x2008, // PUNCTUATION SPACE\n  0x2009, // THIN SPACE\n  0x200a, // HAIR SPACE\n  0x202f, // NARROW NO-BREAK SPACE\n  0x205f, // MEDIUM MATHEMATICAL SPACE\n  0x3000, // IDEOGRAPHIC SPACE\n  0xfeff, // ZERO WIDTH NO-BREAK SPACE\n];\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nexport const IS_WHITESPACE = new Uint8Array(65536);\nfor (const char of WHITESPACE_CHARS) {\n  IS_WHITESPACE[char] = 1;\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAGO,MAAM,mBAAmB;IAC9B;IACA;IACA;IACA,gQAAS,CAAC,KAAK;IACf,gQAAS,CAAC,gBAAgB;IAC1B,gQAAS,CAAC,cAAc;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iBAAiB;AAEvB,MAAM,gBAAgB,IAAI,WAAW;AAC5C,KAAK,MAAM,QAAQ,iBAAkB;IACnC,aAAa,CAAC,KAAK,GAAG;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thari/Desktop/face-recognition-project/face-recognition-app/node_modules/sucrase/dist/esm/parser/util/identifier.js"],"sourcesContent":["import {charCodes} from \"./charcodes\";\nimport {WHITESPACE_CHARS} from \"./whitespace\";\n\nfunction computeIsIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code < 128) return false;\n  throw new Error(\"Should not be called with non-ASCII char code.\");\n}\n\nexport const IS_IDENTIFIER_CHAR = new Uint8Array(65536);\nfor (let i = 0; i < 128; i++) {\n  IS_IDENTIFIER_CHAR[i] = computeIsIdentifierChar(i) ? 1 : 0;\n}\nfor (let i = 128; i < 65536; i++) {\n  IS_IDENTIFIER_CHAR[i] = 1;\n}\n// Aside from whitespace and newlines, all characters outside the ASCII space are either\n// identifier characters or invalid. Since we're not performing code validation, we can just\n// treat all invalid characters as identifier characters.\nfor (const whitespaceChar of WHITESPACE_CHARS) {\n  IS_IDENTIFIER_CHAR[whitespaceChar] = 0;\n}\nIS_IDENTIFIER_CHAR[0x2028] = 0;\nIS_IDENTIFIER_CHAR[0x2029] = 0;\n\nexport const IS_IDENTIFIER_START = IS_IDENTIFIER_CHAR.slice();\nfor (let numChar = charCodes.digit0; numChar <= charCodes.digit9; numChar++) {\n  IS_IDENTIFIER_START[numChar] = 0;\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,SAAS,wBAAwB,IAAI;IACnC,IAAI,OAAO,IAAI,OAAO,SAAS;IAC/B,IAAI,OAAO,IAAI,OAAO;IACtB,IAAI,OAAO,IAAI,OAAO;IACtB,IAAI,OAAO,IAAI,OAAO;IACtB,IAAI,OAAO,IAAI,OAAO,SAAS;IAC/B,IAAI,OAAO,KAAK,OAAO;IACvB,IAAI,OAAO,KAAK,OAAO;IACvB,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,qBAAqB,IAAI,WAAW;AACjD,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;IAC5B,kBAAkB,CAAC,EAAE,GAAG,wBAAwB,KAAK,IAAI;AAC3D;AACA,IAAK,IAAI,IAAI,KAAK,IAAI,OAAO,IAAK;IAChC,kBAAkB,CAAC,EAAE,GAAG;AAC1B;AACA,wFAAwF;AACxF,4FAA4F;AAC5F,yDAAyD;AACzD,KAAK,MAAM,kBAAkB,wQAAgB,CAAE;IAC7C,kBAAkB,CAAC,eAAe,GAAG;AACvC;AACA,kBAAkB,CAAC,OAAO,GAAG;AAC7B,kBAAkB,CAAC,OAAO,GAAG;AAEtB,MAAM,sBAAsB,mBAAmB,KAAK;AAC3D,IAAK,IAAI,UAAU,gQAAS,CAAC,MAAM,EAAE,WAAW,gQAAS,CAAC,MAAM,EAAE,UAAW;IAC3E,mBAAmB,CAAC,QAAQ,GAAG;AACjC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thari/Desktop/face-recognition-project/face-recognition-app/node_modules/sucrase/dist/esm/parser/index.js"],"sourcesContent":["\n\nimport {augmentError, initParser, state} from \"./traverser/base\";\nimport {parseFile} from \"./traverser/index\";\n\nexport class File {\n  \n  \n\n  constructor(tokens, scopes) {\n    this.tokens = tokens;\n    this.scopes = scopes;\n  }\n}\n\nexport function parse(\n  input,\n  isJSXEnabled,\n  isTypeScriptEnabled,\n  isFlowEnabled,\n) {\n  if (isFlowEnabled && isTypeScriptEnabled) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  initParser(input, isJSXEnabled, isTypeScriptEnabled, isFlowEnabled);\n  const result = parseFile();\n  if (state.error) {\n    throw augmentError(state.error);\n  }\n  return result;\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;AAEO,MAAM;IAIX,YAAY,MAAM,EAAE,MAAM,CAAE;QAC1B,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG;IAChB;AACF;AAEO,SAAS,MACd,KAAK,EACL,YAAY,EACZ,mBAAmB,EACnB,aAAa;IAEb,IAAI,iBAAiB,qBAAqB;QACxC,MAAM,IAAI,MAAM;IAClB;IACA,IAAA,iQAAU,EAAC,OAAO,cAAc,qBAAqB;IACrD,MAAM,SAAS,IAAA,iQAAS;IACxB,IAAI,4PAAK,CAAC,KAAK,EAAE;QACf,MAAM,IAAA,mQAAY,EAAC,4PAAK,CAAC,KAAK;IAChC;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}}]
}