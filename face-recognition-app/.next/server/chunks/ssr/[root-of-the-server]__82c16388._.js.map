{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thari/Desktop/face-recognition-project/face-recognition-app/lib/api.js"],"sourcesContent":["const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\r\n\r\nexport const api = {\r\n  // Upload a new person to the system\r\n  async registerPerson(name, imageFile) {\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('image', imageFile);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/register`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to register person');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n\r\n  // Detect face from webcam image\r\n  async detectFace(imageBlob) {\r\n    const formData = new FormData();\r\n    formData.append('image', imageBlob);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/detect`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to detect face');\r\n    }\r\n\r\n    return await response.json();\r\n  },\r\n\r\n  // Get video stream for real-time detection\r\n  getVideoStream() {\r\n    return `${API_BASE_URL}/video_feed`;\r\n  },\r\n\r\n  // Health check\r\n  async healthCheck() {\r\n    const response = await fetch(`${API_BASE_URL}/health`);\r\n    return response.ok;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;AAAA,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAEjD,MAAM,MAAM;IACjB,oCAAoC;IACpC,MAAM,gBAAe,IAAI,EAAE,SAAS;QAClC,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QACxB,SAAS,MAAM,CAAC,SAAS;QAEzB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,SAAS,CAAC,EAAE;YACvD,QAAQ;YACR,MAAM;QACR;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B;IAEA,gCAAgC;IAChC,MAAM,YAAW,SAAS;QACxB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,SAAS;QAEzB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC,EAAE;YACrD,QAAQ;YACR,MAAM;QACR;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B;IAEA,2CAA2C;IAC3C;QACE,OAAO,GAAG,aAAa,WAAW,CAAC;IACrC;IAEA,eAAe;IACf,MAAM;QACJ,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC;QACrD,OAAO,SAAS,EAAE;IACpB;AACF","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thari/Desktop/face-recognition-project/face-recognition-app/app/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { api } from \"../lib/api\";\r\n\r\nexport default function Home() {\r\n  const [name, setName] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [detectionResult, setDetectionResult] = useState(\"\");\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!name || !file) {\r\n      alert(\"Please enter a name and select an image!\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadSuccess(false);\r\n\r\n    try {\r\n      // First upload to Cloudinary\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", \"face_recognition\");\r\n\r\n      const cloudinaryResponse = await fetch(`https://api.cloudinary.com/v1_1/drq8ovu6m/image/upload`, {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      const cloudinaryData = await cloudinaryResponse.json();\r\n      \r\n      if (cloudinaryResponse.ok) {\r\n        // Then register with our backend\r\n        try {\r\n          await api.registerPerson(name, file);\r\n        } catch (backendError) {\r\n          console.log(\"Backend registration failed, but image uploaded successfully\");\r\n        }\r\n        \r\n        setUploadSuccess(true);\r\n        setName(\"\");\r\n        setFile(null);\r\n        setTimeout(() => setUploadSuccess(false), 3000);\r\n      } else {\r\n        alert(\"Upload failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"Upload failed. Please try again.\");\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const startDetection = async () => {\r\n    setIsDetecting(true);\r\n    setDetectionResult(\"\");\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: { \r\n          width: 640, \r\n          height: 480,\r\n          facingMode: \"user\"\r\n        } \r\n      });\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      alert(\"Unable to access webcam. Please check permissions.\");\r\n      setIsDetecting(false);\r\n    }\r\n  };\r\n\r\n  const stopDetection = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const tracks = videoRef.current.srcObject.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      videoRef.current.srcObject = null;\r\n    }\r\n    setIsDetecting(false);\r\n    setDetectionResult(\"\");\r\n  };\r\n\r\n  const captureAndDetect = async () => {\r\n    if (videoRef.current && canvasRef.current) {\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n      \r\n      canvas.width = video.videoWidth;\r\n      canvas.height = video.videoHeight;\r\n      context.drawImage(video, 0, 0);\r\n      \r\n      setDetectionResult(\"Face detected! Processing...\");\r\n      \r\n      try {\r\n        // Convert canvas to blob\r\n        canvas.toBlob(async (blob) => {\r\n          try {\r\n            const result = await api.detectFace(blob);\r\n            setDetectionResult(`Person identified: ${result.name} (${result.confidence}% confidence)`);\r\n          } catch (error) {\r\n            setDetectionResult(\"No matching person found in database\");\r\n          }\r\n        }, 'image/jpeg');\r\n      } catch (error) {\r\n        setDetectionResult(\"Detection failed. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-lg border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                </svg>\r\n              </div>\r\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n                Face Recognition\r\n              </h1>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">\r\n              AI-Powered Face Detection & Recognition\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n          \r\n          {/* Registration Section */}\r\n          <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n            <div className=\"text-center mb-8\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Register New Person</h2>\r\n              <p className=\"text-gray-600\">Upload a photo and enter the person's name to register them in our system</p>\r\n            </div>\r\n\r\n            <div className=\"space-y-6\">\r\n              {/* Name Input */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Full Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter person's full name\"\r\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {/* File Upload */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Profile Photo\r\n                </label>\r\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors duration-200\">\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    className=\"hidden\"\r\n                    id=\"file-upload\"\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                  />\r\n                  <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                    <div className=\"space-y-2\">\r\n                      <svg className=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\r\n                        <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                      </svg>\r\n                      <div className=\"text-sm text-gray-600\">\r\n                        <span className=\"font-medium text-blue-600 hover:text-blue-500\">\r\n                          Click to upload\r\n                        </span>{\" \"}\r\n                        or drag and drop\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n                {file && (\r\n                  <div className=\"mt-2 text-sm text-green-600\">\r\n                    ✓ Selected: {file.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Upload Button */}\r\n              <button\r\n                onClick={handleUpload}\r\n                disabled={isUploading || !name || !file}\r\n                className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 px-6 rounded-lg font-medium hover:from-blue-600 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                {isUploading ? (\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Uploading...\r\n                  </div>\r\n                ) : (\r\n                  \"Register Person\"\r\n                )}\r\n              </button>\r\n\r\n              {/* Success Message */}\r\n              {uploadSuccess && (\r\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                  <div className=\"flex\">\r\n                    <svg className=\"h-5 w-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    <div className=\"ml-3\">\r\n                      <p className=\"text-sm font-medium text-green-800\">\r\n                        Registration successful!\r\n                      </p>\r\n                      <p className=\"text-sm text-green-700 mt-1\">\r\n                        The person has been registered in our system.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Face Detection Section */}\r\n          <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n            <div className=\"text-center mb-8\">\r\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Face Detection</h2>\r\n              <p className=\"text-gray-600\">Use your webcam to detect and identify registered persons</p>\r\n            </div>\r\n\r\n            <div className=\"space-y-6\">\r\n              {/* Webcam Display */}\r\n              <div className=\"relative\">\r\n                <div className=\"bg-gray-100 rounded-lg overflow-hidden aspect-video flex items-center justify-center\">\r\n                  {isDetecting ? (\r\n                    <video\r\n                      ref={videoRef}\r\n                      autoPlay\r\n                      playsInline\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"text-center text-gray-500\">\r\n                      <svg className=\"mx-auto h-16 w-16 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                      </svg>\r\n                      <p>Click \"Start Detection\" to activate webcam</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <canvas ref={canvasRef} className=\"hidden\" />\r\n              </div>\r\n\r\n              {/* Detection Controls */}\r\n              <div className=\"flex space-x-4\">\r\n                {!isDetecting ? (\r\n                  <button\r\n                    onClick={startDetection}\r\n                    className=\"flex-1 bg-gradient-to-r from-green-500 to-emerald-600 text-white py-3 px-6 rounded-lg font-medium hover:from-green-600 hover:to-emerald-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-all duration-200\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                    Start Detection\r\n                  </button>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      onClick={captureAndDetect}\r\n                      className=\"flex-1 bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-3 px-6 rounded-lg font-medium hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200\"\r\n                    >\r\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 13a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                      </svg>\r\n                      Capture & Detect\r\n                    </button>\r\n                    <button\r\n                      onClick={stopDetection}\r\n                      className=\"flex-1 bg-gradient-to-r from-red-500 to-pink-600 text-white py-3 px-6 rounded-lg font-medium hover:from-red-600 hover:to-pink-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition-all duration-200\"\r\n                    >\r\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                      Stop\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              {/* Detection Result */}\r\n              {detectionResult && (\r\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n                  <div className=\"flex\">\r\n                    <svg className=\"h-5 w-5 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    <div className=\"ml-3\">\r\n                      <p className=\"text-sm font-medium text-blue-800\">\r\n                        Detection Result\r\n                      </p>\r\n                      <p className=\"text-sm text-blue-700 mt-1\">\r\n                        {detectionResult}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-white border-t border-gray-200 mt-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"text-center text-gray-500 text-sm\">\r\n            <p>© 2024 Face Recognition System. Powered by AI Technology.</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}